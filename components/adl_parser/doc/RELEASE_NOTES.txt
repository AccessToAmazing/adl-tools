
ADL Reference Parser Release Notes
==================================

A propos
--------
	This file documents changes to the core parser libraries, which 
	affects all builds of it, including the .Net, Java components, 
	the ADL workbench, and other derivative applications.


Version
-------
	Last Change: $LastChangedDate$
	

Release history
---------------

interim release Subversion 45 - 27/Mar/2006
	All archetypes parse, save and reparse as expected except SOAP Headings.
	The problem with the latter is that the Assertion grammar does not contain
	absolute_path items; this will be fixed next release.

	- enhancements: 
		- now can have two archetypes in memory at once, due to getting rid 
		  of current_archteype from SHARED_ARCHETYPE_CONTEXT object

	- bug fixes:
		- rewrote Assertion expression rules, removed 96 reduce/reduce conflicts
		  in the cADL parser; 

		- fixed minor bug in path testing where a path ending in attr[obj_id] 
		  would match the OG structure when it should not


interim subversion release 4 - 12 Oct 2005

	- enhancements
		- more efficient implementation of DT_OBJECT_CONVERTER, which 
		  now checks far fewer types when comparing generic types

	- bugfixes
		- better structure of code with respect to use of 
		  SHARED_ADL_INTERFACE, which slved .Net DLL crash problem.

	++++++++++++++ move to subversion ++++++++++++++

interim release BitKeeper cset 1.57 23/June/2005

	- enhancements
		- implemented CR-000138 Archetype level assertions. Updated
		  test cases, test archetypes.

		- minor improvements in open and save button behaviour in GUI

release 'arch_desc' BitKeeper cset 1.56 19/June/2005

	- enhancements
		- implemented ARCHETYPE_DESCRIPTION class, parsing, and GUI
		  view. Upgraded all test archetypes.

		- added new class DT_OBJECT_CONVERTER, which performs generic
		  DT_ <-> object structure conversion. This enables the 
		  archetype description and any other dADL content to be 
		  converted automatically into objects, rather than requiring
		  hand-built routines.

interim release BitKeeper cset 1.50 01/June/2005

	- enhancements
		- News facility added: a news window will pop up the first time
		  the workbench is used with a new version.

interim release BitKeeper cset 1.49 30/May/2005

	- enhancements
		- DT structures (the internal representation of dADL sections)
		  are all generically generated from objects and are used to 
		  generate objects. This means that C_QUANTITYs, the description 
		  section and so on of an archetype are all handled by the one 
		  piece of code now. The ontology section is slightly more
		  complex, since its current modelling does not correspond
		  strictly to the object types used in the class
		  ARCHETYPE_ONTOLOGY. This will change in the future.

	- bug fixes
		- numerous small bugs fixed.

interim release BitKeeper cset 1.48 06/May/2005

	- bug fixes
		- implemented interval constraints of the form |100|, i.e. 
		  point intervals. Implemented for all ordered basic types,
		  i.e. integer, real, date, date_time, time, duration.

	- enhancements
		- implemented assumed values for primitive types and
		  domain types C_QUANTITY, C_CODED_TEXT, C_ORDINAL. 
		  C_PRIMITIVE and all subtypes, as well as C_DOMAIN_TYPE
		  have assumed_value, default_value, has_assumed_value and
		  set_assumed_value. Workbench GUI indicates assumed values.

interim release BitKeeper cset 1.39 25/Feb/2005

	- enhancements
		- C_QUANTITY now allows magnitude to be absent in inline dADL,
		  meaning open magnitude, with unit still constrained

		- support dADL2 style syntax, including nested generics

		- change paths to include anonymous nodes

	- bug fixes
		- an error whereby archetypes with include and exclude lists sent
		  the parser into an infinite loop is fixed.

		- empty C_DOMAIN_TYPE sections now parse, e.g. {C_QUANTITY <>}

		- embedded C_DOMAIN_TYPE sections with sibling non-C_DOMAIN_TYPE
		  sections now parse properly

interim release BitKeeper cset 1.27 - 19 September 2004

	- enhancements

		- finished inline dADL support for C_DOMAIN_TYPE subtypes;
		  correctly serialises now; use of parantheses corrected

		- file names for serialisations other than ADL now replace
		  the '.adl' extension at the end rather than just appending
		  '.html', '.xml' or whatever.:wq

	- bug fixes
		
		- fix crash if icon not available (black square now shows, 
		  plus message indicating which icon missing).

interim release BitKeeper cset 1.23 - 09 September 2004

	- GUI fixes:

		- added option dialog; tool now asks for editor and repository
		  path if no .cfg file found on startup, and writes settings
		  to .cfg file in startup directory

		- specialisated archetypes have a differnt icon in archetype
		  explorer

		- specialised archetype parent archetype id now shown in GUI

		- general GUI size & widget cleanup

	- Bug fixes:

		- unused parent codes in specialised archetypes no longer generate
		  warnings

	- Enhancements:

		- ASSERTION-building factory routines exposed in interface

		- ontology sections all now save in sorted order of keys

		- ADL_INTERFACE has an attribute called openehr_version which
		  contains the automatically version information from the software
		  repository - useful for reporting bugs, using in 'about' window.

interim release BitKeeper cset 1.3.1.30 - 29 July 2004

	- added archetype explorer control on left side of tool

	- fixed error where empty term definition text caused crash

	- corrected validation of found use_node paths

	- corrected error where sibling object nodes with same code
	  caused crash

interim release BitKeeper cset 1.3.1.22 - 05 May 2004

	- re-engineered object models as described in draft ADL 1.2
	  manual (See openEHR website). This doesn't affect standalong
	  applications but does affect the DLLs.

	- added ADL keywords "allow_archetype", to replace "use_archetype",
	  and "include" and "exclude" to define allowed and excluded sets of
	  archetypes in an archetype slot.

	- slightly imprved visual display in GUI tool with a new icon for 1:N
	  attributes.

"mar2004" Release - 31 Mar 2004 (BitKeeper cset 1.3.1.13)

	- separated out .Net DLL into its own toolkit

	- ADL language 1.1;  ADL language manual 1.1

	- VB.net sources updated

	- implements new interval syntax using "||".

	- implementation of clinical ADL types CODED_TEXT and ORDINAL 
	  conforming to syntax defined in version 1.1 of manual.

	- initial experimental XML output for OWL as save option in ADL
	  workbench. THis will be rewritten next version!

	- many small bugs and limitations of DLLs fixed, allowing more
	  powerful interrogation of the Archetype ontology in memory from
	  any .net language, or any application natively using the Eiffel
	  backend (i.e. any C/C++ app, or Java via JNI).

interim Release - 06 Feb 2004

	- ADL language 1.1;  ADL language manual 0.9.9

	- fixed REAL output error where ".0" forgotten for round numbers

	- numerous small GUI fixes

interim Release - 27 Jan 2004

	- ADL language 1.0;  ADL language manual 0.9.5

	- added intervals as data types in dADL

	- intervals now require "|" delimiters, e.g. "|100..200|", "|<100|".

	- various minor bugs fixed in date/times, durations.

"jan2004" Release - 15 Jan 2004

	- ADL language 0.95

	- Ontology model completely rewritten - now has its own functional
	  interface independent of dADL. Tested with C# and VB through dotNet 
	  DLL build.

	- date/time types now have pattern-based constraint expressions

	- term references in cADL and dADL no longer need version id in
	  terminlogy part - it is now optional; e.g. [ICD9AM::F72] can be used
	  instead of [ICD9AM(2003)::F72]

	- introduction of clinical/scientific predefined type library, including
	  constraint types ("c_" types) for:
		* Text, Coded_text, Code_phrase
	  	* Quantity, Ordinal, Countable
		* Partial_date, Partial_time, Partial_date_time

	  New efficient syntax for coded term constraints:
	  	[terminology_id::code1, code2, code3, ...]

	  New efficient syntax for ordinals:
	  	0|[local::at0003], 1|[local::at0004], 2|[local::at0005]

	- improvements in GUI validator tree rendering of archetypes:
		* c_ordinals shown efficiently with codes and comments
		* c_terms shown efficiently with codes and comments
		* presence of invariants indicated

	- integration of ADL back-end with Clinician's Archetype Editor via
	  dotNet: clinician-designed archetypes now save as regular ADL.


Initial Release - November 2003

	Basic validation functionality:
		- basic primitive types String, Integer, Real, Boolean
		- simple version of constraints for primitive types Date, Time,
		  Date_time
		- basic implementation of ontology section of archetype

