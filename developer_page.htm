<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en">
<head>








  
  
  
  
  
  
  
  <meta content="text/html;charset=ISO-8859-1" http-equiv="Content-Type" />







  


  
  
  
  
  
  
  
  
  
  
  
  
  
  <title>openEHR Eiffel Implementation Project</title>
  <link rel="stylesheet" href="http://www.openehr.org/styles/oe.css" type="text/css" />
</head>


<body>








<h1>The ref_impl_eiffel Project Developer's page
</h1>








<hr style="width: 100%; height: 2px;" />
<h2>What is in this project?</h2>



<p>There are 3 sections to this repository, as follows:</p>



<ul>



  <li><span style="font-weight: bold;">libraries</span>: this is where the <span style="font-style: italic;">open</span>EHR reference model archetype models and supporting generic libraries are. Executables in this area are all test applications.</li>



  <li><span style="font-weight: bold;">components</span>: re-usable
components based on the libraries are here. Includes .Net and
Java-wrapped DLLs (future: Linux .so libs) for ADL, and any other
deployable component form of the&nbsp;<span style="font-style: italic;">open</span>EHR models. Will eventually include an&nbsp;<span style="font-style: italic;">open</span>EHR archetype- and template-processing kernel</li>



  <li><span style="font-weight: bold;">apps</span>: standalone
executable applications based on the libraries and/or components.
Includes the ADL workbench, and will eventually include EHR,
demographic and archetype servers.</li>



</ul>



<h2>Setting up for building</h2>



<p>There are a number of steps to do to ensure you are ready to build anything, as follows:</p>



<ul>



  

  

  <li>Download and install EiffelStudio 5.7 from <a href="http://eiffel.com">http://eiffel.com</a> (free use license).</li>



  
  
  
  <ul>



    <li>during install, when it asks which compiler to use, you can
safely choose whichever; if you have MS VC++ 6.0 or later on your
machine, you can use that, else just choose the built-in Borland
bcc compiler or gcc or other default compiler.</li>



    <li>when it asks whether to precompile the libraries, choose yes, and precompile base and vision.</li>



  
  
  
  </ul>



  

  

  <li>You can, if you wish, build individual projects within the EiffelStudio IDE; but if you wish to do batch command-line builds, you need SCons. SCons is a software build utility, based on Python, and it only takes a few minutes to install.</li>



  
  
  
  <ul>



    <li>download and install Python 2.5 or higher from <a href="http://www.python.org">http://www.python.org</a>.</li>



    <li>download and install SCons 0.97 or higher from <a href="http://www.scons.org">http://www.scons.org</a>.</li>



  
  
  
  </ul>



</ul>



<h2>Building</h2>



<p>The SCons-based facility for building the entire project works on Windows, Linux and Mac.</p>



<p>The approach is:</p>



<ul>



  <li>Open a Windows command window, or a Linux terminal window. On Mac, you need to open an X11 EiffelStudio console.</li>



  <li>Change directory to the project root directory.</li>



  <li>To build everything, simply type <span style="font-weight: bold;">scons</span>.</li>



</ul>



This will cause the build of all binaries. Sometimes it fails in
various strange ways, and a manual build has to be done. This is not
hard - it just means starting EiffelStudio by hand and telling it to
build from an existing ECF file; depending on what you want to build,
you just select the ECF file in the appropriate directory. <br />



<p>SCons provides many other options, depending how and what you want to build. For example:</p>



<ul>



  <li>To build just ADL Workbench, type <span style="font-weight: bold;">scons adl_workbench</span>.</li>



  <li>To create installers for the current platform, type <span style="font-weight: bold;">scons install</span>.</li>



  <li>For a list of the SCons command-line options, type <span style="font-weight: bold;">scons -h</span>.</li>



</ul>



<h2>Build Targets (what can I build?)</h2>



<p>The current build targets are as follows:</p>



<ul>



  <li><span style="font-weight: bold;">libraries area</span>:&nbsp;</li>



  
  
  
  <ul>



    <li>common_libs\test\app - a tester for dADL, method dispatcher, units library and others;</li>



    <li>openehr\test\app - a tester for the openEHR reference model classes</li>



  
  
  
  </ul>



  <li><span style="font-weight: bold;">component area</span>:</li>



  
  
  
  <ul>



    <li>components\adl_parser\test\app - a tester for the ADL parser</li>



    <li>components\adl_parser\lib\dotnet_dll - the <span style="font-weight: bold;">.Net DLL</span> form of the ADL parser</li>



    <li>components\adl_parser\lib\java_lib - the <span style="font-weight: bold;">JNI-wrapped DLL</span> form of the ADL parser (currently not being maintained - out of date!)</li>



  
  
  
  </ul>



  <li><span style="font-weight: bold;">apps area</span>:</li>



  
  
  
  <ul>



    


    <li>apps\adl_workbench\app - <span style="font-weight: bold;">adl_workbench</span>, an EiffelVision2-based GUI application for ADL parsing, viewing and saving.</li>



  
  
  
  </ul>



</ul>


<h2>Parser Grammars</h2>


The following are links to the grammars of the various parsers:<br />


<ul>


  <li>ADL (<a href="components/adl_parser/src/syntax/adl/parser/adl_validator.y">.y file</a>) (<a href="components/adl_parser/src/syntax/adl/parser/adl_validator.html">html documentation</a>)</li>


  <li>cADL  (<a href="components/adl_parser/src/syntax/cadl/parser/cadl_validator.y">.y file</a>) (<a href="components/adl_parser/src/syntax/cadl/parser/cadl_validator.html">html documentation</a>)</li>


  <li>dADL  (<a href="libraries/common_libs/src/structures/syntax/dadl/parser/dadl2_validator.y">.y file</a>) (<a href="libraries/common_libs/src/structures/syntax/dadl/parser/dadl2_validator.html">html documentation</a>)</li>


  <li>ADL Path Syntax (<a href="libraries/common_libs/src/structures/object_graph/path/og_path_validator.y">.y file</a>) (<a href="libraries/common_libs/src/structures/object_graph/path/og_path_validator.html">html documentation</a>)</li>


  <li>Units parser&nbsp;(<a href="libraries/common_libs/src/unit_parser/parser/units_parser.y">.y file</a>) (<a href="libraries/common_libs/src/unit_parser/parser/units_parser.html">html documentation</a>)</li>


</ul>








<hr style="width: 100%; height: 2px;" />
<p class="footer">$LastChangedDate$
$LastChangedRevision$</p>








</body>
</html>
