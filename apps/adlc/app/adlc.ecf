<?xml version="1.0" encoding="ISO-8859-1"?>
<system xmlns="http://www.eiffel.com/developers/xml/configuration-1-10-0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.eiffel.com/developers/xml/configuration-1-10-0 http://www.eiffel.com/developers/xml/configuration-1-10-0.xsd" name="adlc" uuid="552D673F-533D-455B-AD69-B1B8B047D52D">
	<target name="adlc">
		<root class="APPLICATION" feature="make"/>
		<file_rule>
			<exclude>/.git$</exclude>
			<exclude>/EIFGENs$</exclude>
			<exclude>/CVS$</exclude>
			<exclude>/\.svn$</exclude>
		</file_rule>
		<option debug="false" warning="true" full_class_checking="true" is_attached_by_default="true" void_safety="none" syntax="standard">
			<debug name="dt" enabled="false"/>
			<assertions precondition="true" postcondition="true" check="true" supplier_precondition="true"/>
		</option>
		<setting name="console_application" value="true"/>
		<library name="argument_parser" location="$ISE_LIBRARY\library\argument_parser\argument_parser-safe.ecf"/>
		<library name="base" location="$ISE_LIBRARY\library\base\base-safe.ecf">
			<renaming old_name="C_STRING" new_name="BASE_C_STRING"/>
		</library>
		<library name="encoding" location="$ISE_LIBRARY\library\encoding\encoding-safe.ecf"/>
		<library name="gobo_kernel" location="$ISE_LIBRARY\library\gobo\gobo_kernel-safe.ecf"/>
		<library name="i18n" location="$ISE_LIBRARY\library\i18n\i18n-safe.ecf"/>
		<library name="time" location="$ISE_LIBRARY\library\time\time-safe.ecf">
			<renaming old_name="C_DATE" new_name="TIME_C_DATE"/>
			<renaming old_name="INTERVAL" new_name="TIME_INTERVAL"/>
		</library>
		<library name="xml_parser" location="$ISE_LIBRARY\library\text\parser\xml\parser\xml_parser-safe.ecf"/>
		<library name="xml_tree" location="$ISE_LIBRARY\library\text\parser\xml\tree\xml_tree-safe.ecf"/>
		<cluster name="adl_compiler" location="..\..\..\components\adl_compiler\src\" recursive="true">
			<option void_safety="initialization">
			</option>
		</cluster>
		<cluster name="app" location="..\src\main\" recursive="true">
			<option void_safety="none">
			</option>
		</cluster>
		<cluster name="app_env" location="..\src\env\" recursive="true">
			<option void_safety="initialization">
			</option>
		</cluster>
		<cluster name="app_messages" location="..\..\resources\messages\compiled\"/>
		<cluster name="archetype_repository" location="..\..\..\components\archetype_repository\src\" recursive="true">
			<option void_safety="initialization">
				<assertions precondition="true" postcondition="true" check="true" loop="true" supplier_precondition="true"/>
			</option>
		</cluster>
		<cluster name="common_libs" location="..\..\..\libraries\common_libs\src\" recursive="true">
			<option void_safety="initialization">
				<assertions precondition="true" postcondition="true" check="true" loop="true" supplier_precondition="true"/>
			</option>
			<file_rule>
				<exclude>/other$</exclude>
				<include>/windows$</include>
				<condition>
					<platform value="windows"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/windows$</exclude>
				<include>/other$</include>
				<condition>
					<platform excluded_value="windows"/>
				</condition>
			</file_rule>
		</cluster>
		<cluster name="gobo_lexical" location="$ISE_LIBRARY\contrib\library\gobo\library\lexical\" recursive="true"/>
		<cluster name="gobo_lexical_override" location="$ISE_LIBRARY\library\gobo\override\generated\library\lexical\" recursive="true"/>
		<cluster name="gobo_parse" location="$ISE_LIBRARY\contrib\library\gobo\library\parse\" recursive="true"/>
		<cluster name="gobo_pattern" location="$ISE_LIBRARY\contrib\library\gobo\library\pattern\" recursive="true"/>
		<cluster name="gobo_regexp" location="$ISE_LIBRARY\contrib\library\gobo\library\regexp\" recursive="true"/>
		<cluster name="gobo_structure" location="$ISE_LIBRARY\contrib\library\gobo\library\structure\" recursive="true"/>
		<cluster name="gobo_utility" location="$ISE_LIBRARY\contrib\library\gobo\library\utility\" recursive="true"/>
		<cluster name="openehr" location="..\..\..\libraries\openehr\src\" recursive="true">
			<option void_safety="initialization">
				<assertions precondition="true" postcondition="true" check="true" loop="true" supplier_precondition="true"/>
			</option>
			<visible class="C_DV_ORDINAL"/>
			<visible class="C_CODE_PHRASE"/>
			<visible class="C_DV_QUANTITY"/>
			<visible class="CODE_PHRASE"/>
		</cluster>
		<cluster name="parsers" location="..\..\..\libraries\parsers\" recursive="true">
			<option void_safety="none">
			</option>
		</cluster>
		<cluster name="reference_model_checker" location="..\..\..\components\reference_model_checker\src\" recursive="true">
			<option void_safety="initialization">
			</option>
		</cluster>
		<cluster name="version" location="..\..\..\libraries\version\" recursive="true">
			<option void_safety="initialization">
			</option>
		</cluster>
		<override name="vendor_fixes" location="..\..\..\libraries\vendor-fixes\" recursive="true">
			<option void_safety="initialization">
			</option>
			<file_rule>
				<exclude>/base_net$</exclude>
			</file_rule>
			<file_rule>
				<exclude>/implementation_gtk$</exclude>
				<condition>
					<platform value="windows"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/other$</exclude>
				<include>/windows$</include>
				<condition>
					<platform value="windows"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/windows$</exclude>
				<include>/other$</include>
				<condition>
					<platform excluded_value="windows"/>
				</condition>
			</file_rule>
		</override>
	</target>
</system>
