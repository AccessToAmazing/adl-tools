note
	description: "Icon loader class generated by icondbc"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_RM_CIMI_CLINICAL_DATA_GROUP_SLOT

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "rm/cimi/clinical_data_group_slot"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) 
					A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) 
					A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) 
					A(FF,01,34,8D) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(FF,FF,D4,00) A(FF,FF,E9,00) A(FF,FF,FF,00) A(FF,FF,E9,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) 
					A(FF,FF,E9,00) A(FF,FF,FF,00) A(FF,FF,E9,00) A(FF,FF,D4,00) A(FF,FF,FF,FB) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(FF,FF,FF,00) A(FF,FF,E9,00) A(FF,FF,D4,00) A(FF,FF,BE,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(FF,00,00,80) A(FF,01,34,8D) A(FF,FF,BE,00) A(FF,FF,D4,00) A(FF,FF,BE,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FB) 
					A(FF,FF,BE,00) A(FF,FF,D4,00) A(FF,FF,E9,00) A(FF,FF,FF,FB) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(FF,93,93,93) A(FF,77,77,77) 
					A(FF,FB,FB,FB) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,BE,00) A(FF,FF,D4,00) A(FF,FF,E9,00) A(FF,FF,FF,00) A(FF,FF,E9,00) 
					A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(FF,94,94,94) A(FF,6C,6C,6C) A(FF,4A,4A,4A) A(FF,4D,4D,4D) A(FF,4D,4D,4D) A(FF,4D,4D,4D) 
					A(FF,4D,4D,4D) A(FF,FF,D4,00) A(FF,FF,E9,00) A(FF,FF,FF,00) A(FF,FF,E9,00) A(FF,FF,D4,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) 
					A(FF,B6,B6,B6) A(FF,68,68,68) A(FF,A0,A0,A0) A(FF,90,90,90) A(FF,90,90,90) A(FF,90,90,90) A(FF,97,95,93) A(FF,FF,BE,00) A(FF,FF,FF,00) A(FF,FF,E9,00) 
					A(FF,FF,D4,00) A(FF,FF,BE,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(FF,C4,C4,C4) A(FF,72,72,72) A(FF,EF,EF,EF) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FB) A(FF,FF,BE,00) A(FF,FF,D4,00) A(FF,FF,BE,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(FF,00,00,80) A(FF,01,34,8D) A(FF,C4,C4,C4) A(FF,72,72,72) A(FF,EF,EF,EF) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,ED,F4,FC) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(FF,C4,C4,C4) A(FF,72,72,72) 
					A(FF,EF,EF,EF) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FB) A(FF,FF,BE,00) A(FF,FF,D4,00) A(FF,FF,E9,00) A(FF,FF,FF,FB) 
					A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(FF,C4,C4,C4) A(FF,73,73,73) A(FF,EE,EE,EE) A(FF,F0,F0,F0) A(FF,F0,F0,F0) A(FF,F0,F0,F0) 
					A(FF,FF,FF,FF) A(FF,FF,BE,00) A(FF,FF,D4,00) A(FF,FF,E9,00) A(FF,FF,FF,00) A(FF,FF,E9,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) 
					A(FF,C6,C6,C6) A(FF,63,63,63) A(FF,3D,3D,3D) A(FF,3F,3F,3F) A(FF,3F,3F,3F) A(FF,3F,3F,3F) A(FF,3D,3D,3D) A(FF,FF,D4,00) A(FF,FF,E9,00) A(FF,FF,FF,00) 
					A(FF,FF,E9,00) A(FF,FF,D4,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) 
					A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(00,00,00,00) 
					A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) 
					A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end