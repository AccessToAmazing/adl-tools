note
	description: "Icon loader class generated by icondbc"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "See notice at bottom of class"

class ICON_OPENEHR

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "openehr"
			make_with_size (64, 64)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,F1,F1,F1) 
					A(FF,FF,FB,F0) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) 
					A(FF,EF,D6,C6) A(FF,FF,CC,66) A(FF,FF,CC,66) A(FF,FF,99,66) A(FF,FF,CC,99) A(FF,FF,CC,99) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,FF,FF,FF) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_1 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,CC,99) A(FF,FF,CC,66) A(FF,FF,CC,66) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) 
					A(FF,FF,CC,99) A(FF,FF,CC,66) A(FF,FF,CC,66) A(FF,FF,CC,99) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,E7,E7,D6) A(FF,FF,CC,99) A(FF,FF,CC,66) A(FF,FF,CC,66) A(FF,FF,CC,66) A(FF,FF,CC,99) A(FF,F8,F8,F8) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,CC,99) A(FF,FF,CC,66) A(FF,FF,CC,66) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FB,F0) A(FF,FF,CC,99) A(FF,FF,CC,66) A(FF,FF,CC,66) A(FF,FF,CC,99) A(FF,FF,FB,F0) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,CC) A(FF,FF,CC,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,CC,66) A(FF,EF,D6,C6) A(FF,F8,F8,F8) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,EF,D6,C6) A(FF,FF,CC,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,EF,D6,C6) A(FF,F8,F8,F8) 
					A(FF,F8,F8,F8) A(FF,F8,F8,F8) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,99) A(FF,F1,F1,F1) A(FF,F8,F8,F8) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,99,66) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,E7,E7,D6) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,EF,D6,C6) 
					A(FF,F8,F8,F8) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,F8,F8,F8) A(FF,FF,FF,CC) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,99) 
					A(FF,EF,D6,C6) A(FF,EF,D6,C6) A(FF,FF,CC,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,66) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) 
					A(FF,E7,E7,D6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,F1,F1,F1) A(FF,EF,D6,C6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F8,F8,F8) A(FF,FF,FB,F0) A(FF,FF,CC,99) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,CC,99) A(FF,EF,D6,C6) A(FF,EF,D6,C6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,F1,F1,F1) 
					A(FF,F8,F8,F8) A(FF,E7,E7,D6) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,F1,F1,F1) A(FF,E7,E7,D6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,66) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,66) A(FF,E7,E7,D6) A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,C0,C0,C0) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) 
					A(FF,EF,D6,C6) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,F8,F8,F8) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,99) A(FF,E3,E3,E3) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,CC,66) A(FF,E3,E3,E3) A(FF,EF,D6,C6) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,CC,CC) A(FF,DD,DD,DD) A(FF,E3,E3,E3) 
					A(FF,F1,F1,F1) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,EF,D6,C6) A(FF,EA,EA,EA) A(FF,CC,EC,FF) A(FF,E3,E3,E3) A(FF,FF,99,66) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,CC,CC,99) A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,EF,D6,C6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,66) A(FF,E3,E3,E3) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,99) A(FF,DD,DD,DD) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,CC,CC,CC) A(FF,D7,D7,D7) 
					A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,EF,D6,C6) A(FF,E3,E3,E3) A(FF,D7,D7,D7) A(FF,CC,CC,CC) A(FF,C0,C0,C0) 
					A(FF,A6,CA,F0) A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,CC,99) A(FF,CC,CC,CC) A(FF,DD,DD,DD) A(FF,F1,F1,F1) A(FF,FF,CC,99) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,CB,CB,CB) A(FF,FF,99,66) A(FF,FF,99,33) 
					A(FF,FF,99,66) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,EF,D6,C6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,EF,D6,C6) A(FF,EA,EA,EA) A(FF,D7,D7,D7) 
					A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,EA,EA,EA) A(FF,FF,CC,99) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CB,CB,CB) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,CC,CC,99) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,CC,CC,99) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,CC,99,66) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,F8,F8,F8) A(FF,E7,E7,D6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,99) A(FF,DD,DD,DD) 
					A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,99) A(FF,C0,C0,C0) 
					A(FF,CC,CC,CC) A(FF,EA,EA,EA) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,B2,B2,B2) A(FF,B2,B2,B2) 
					A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,FF,99,66) A(FF,FF,99,33) 
					A(FF,CC,CC,99) A(FF,EA,EA,EA) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,C0,C0,C0) A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,AD,A9,90) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,E3,E3,E3) A(FF,FF,CC,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,99,CC,CC) 
					A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,FF,FF,FF) A(FF,FF,CC,99) 
					A(FF,FF,99,33) A(FF,FF,99,66) A(FF,EF,D6,C6) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,99,66) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,AD,A9,90) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,CC,99,66) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,CC,99,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,99,99,99) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_2 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,B2,B2,B2) A(FF,CC,99,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,99) A(FF,D7,D7,D7) A(FF,CB,CB,CB) A(FF,CC,CC,99) A(FF,CC,99,66) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,CC,99,66) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,AD,A9,90) 
					A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,FF,FF,FF) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,D7,D7,D7) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,33) A(FF,AD,A9,90) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,CC,CC,99) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,A0,A0,A4) A(FF,96,96,96) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,CC,99,66) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,AD,A9,90) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,FF,99,66) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,B2,B2,B2) A(FF,AD,A9,90) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,C0,C0,C0) 
					A(FF,CB,CB,CB) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,A0,A0,A4) A(FF,96,96,96) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) 
					A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,96,96,96) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,FF,FB,F0) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) 
					A(FF,CC,CC,CC) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) 
					A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,CC,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,AD,A9,90) A(FF,96,96,96) A(FF,96,96,96) 
					A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,AD,A9,90) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,B2,B2,B2) 
					A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,96,96,96) 
					A(FF,86,86,86) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,AD,A9,90) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,AD,A9,90) A(FF,A0,A0,A4) A(FF,A0,A0,A4) 
					A(FF,E7,E7,D6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,99) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,CC,EC,FF) 
					A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,CC,99) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,CC,99,66) A(FF,A0,A0,A4) A(FF,96,96,96) A(FF,96,96,96) A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,CC,99,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,CC,99) 
					A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,CC,99,66) A(FF,AD,A9,90) A(FF,A0,A0,A4) 
					A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,CC,CC,99) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,CC,99,66) A(FF,AD,A9,90) A(FF,96,96,96) A(FF,86,86,86) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,CC,99,99) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,CC,99,66) A(FF,AD,A9,90) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,EF,D6,C6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,C0,C0,C0) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,CB,CB,CB) A(FF,DD,DD,DD) A(FF,F1,F1,F1) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,CB,CB,CB) A(FF,B2,B2,B2) A(FF,B2,B2,B2) 
					A(FF,C0,C0,C0) A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,CC,99) A(FF,99,99,99) A(FF,96,96,96) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,CC,99,99) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) 
					A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,C0,C0,C0) 
					A(FF,CC,CC,CC) A(FF,DD,DD,DD) A(FF,FF,CC,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,96,96,96) A(FF,96,96,96) A(FF,A0,A0,A4) 
					A(FF,C0,C0,C0) A(FF,CC,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,99) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,E7,E7,D6) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,CC,99,66) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,EF,D6,C6) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,B2,B2,B2) A(FF,A0,A0,A4) 
					A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,CC,99,99) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,CB,CB,CB) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,AD,A9,90) A(FF,99,99,99) A(FF,96,96,96) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,B2,B2,B2) 
					A(FF,C0,C0,C0) A(FF,CC,CC,99) A(FF,CC,99,66) A(FF,CC,CC,CC) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,FF,CC,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,B2,B2,B2) 
					A(FF,A0,A0,A4) A(FF,96,96,96) A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,CB,CB,CB) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,CC,99) A(FF,B2,B2,B2) 
					A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,FF,FF,FF) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,99) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) 
					A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,EF,D6,C6) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,CC,CC,99) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,CC,99,66) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,99,99,99) A(FF,AD,A9,90) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,EF,D6,C6) 
					A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,96,96,96) 
					A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,AD,A9,90) A(FF,CC,99,66) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EF,D6,C6) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_3 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,FF,99,66) 
					A(FF,FF,99,33) A(FF,FF,99,66) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,FF,FB,F0) A(FF,CC,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,99) A(FF,D7,D7,D7) A(FF,CB,CB,CB) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,CC,99) A(FF,D7,D7,D7) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,CC,CC,99) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,CC,CC,99) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,EF,D6,C6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,99) A(FF,B2,B2,B2) A(FF,AD,A9,90) A(FF,A0,A0,A4) 
					A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,EF,D6,C6) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) 
					A(FF,F8,F8,F8) A(FF,E7,E7,D6) A(FF,CC,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,EF,D6,C6) 
					A(FF,CC,EC,FF) A(FF,CB,CB,CB) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,CB,CB,CB) A(FF,CC,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,99) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) 
					A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,CC,CC,99) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,FF,99,33) A(FF,FF,99,66) A(FF,CC,CC,99) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) 
					A(FF,CC,99,99) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,EF,D6,C6) A(FF,FF,99,33) A(FF,FF,99,00) A(FF,CC,99,66) 
					A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,F8,F8,F8) A(FF,EA,EA,EA) A(FF,D7,D7,D7) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,AD,A9,90) 
					A(FF,AD,A9,90) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) 
					A(FF,FF,CC,66) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,B2,B2,B2) A(FF,AD,A9,90) A(FF,AD,A9,90) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) 
					A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,D7,D7,D7) A(FF,C0,C0,C0) 
					A(FF,B2,B2,B2) A(FF,AD,A9,90) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CB,CB,CB) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,CC,CC,CC) 
					A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,D7,D7,D7) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,E3,E3,E3) 
					A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,E3,E3,E3) A(FF,CB,CB,CB) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,FF,FF,FF) A(FF,F1,F1,F1) 
					A(FF,DD,DD,DD) A(FF,CB,CB,CB) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) 
					A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,FF,99,66) A(FF,FF,99,33) A(FF,FF,99,66) A(FF,B2,B2,B2) A(FF,99,99,99) A(FF,99,99,99) 
					A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,DD,DD,DD) 
					A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,AD,A9,90) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) 
					A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,B2,B2,B2) 
					A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,E3,E3,E3) A(FF,D7,D7,D7) A(FF,CB,CB,CB) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,E3,E3,E3) A(FF,EF,D6,C6) A(FF,FF,99,66) A(FF,FF,99,33) 
					A(FF,FF,99,66) A(FF,B2,B2,B2) A(FF,99,99,99) A(FF,96,96,96) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) 
					A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,CB,CB,CB) A(FF,C0,C0,C0) 
					A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,DD,DD,DD) 
					A(FF,DD,DD,DD) A(FF,D7,D7,D7) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,EA,EA,EA) 
					A(FF,E3,E3,E3) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,DD,DD,DD) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,E3,E3,E3) 
					A(FF,D7,D7,D7) A(FF,CB,CB,CB) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,DD,DD,DD) 
					A(FF,F1,F1,F1) A(FF,EF,D6,C6) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,99,66) A(FF,B2,B2,B2) A(FF,99,99,99) A(FF,96,96,96) A(FF,99,99,99) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,F1,F1,F1) A(FF,E3,E3,E3) A(FF,D7,D7,D7) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,C0,C0,C0) 
					A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,DD,DD,DD) 
					A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,E3,E3,E3) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_4 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,CC,CC,CC) A(FF,D7,D7,D7) 
					A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F8,F8,F8) A(FF,FF,CC,99) A(FF,FF,99,33) A(FF,FF,99,33) A(FF,CC,CC,99) A(FF,B2,B2,B2) 
					A(FF,99,99,99) A(FF,AD,A9,90) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EA,EA,EA) 
					A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,D7,D7,D7) A(FF,CC,CC,CC) 
					A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) 
					A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) 
					A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,F1,F1,F1) A(FF,EA,EA,EA) 
					A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,E7,E7,D6) 
					A(FF,FF,CC,99) A(FF,FF,CC,99) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,DD,DD,DD) A(FF,E3,E3,E3) 
					A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,EA,EA,EA) 
					A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,DD,DD,DD) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) 
					A(FF,CC,CC,CC) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) 
					A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,EA,EA,EA) A(FF,DD,DD,DD) 
					A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CB,CB,CB) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,D7,D7,D7) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,F1,F1,F1) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,DD,DD,DD) 
					A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_5 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,E3,E3,E3) 
					A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,DD,DD,DD) 
					A(FF,EA,EA,EA) A(FF,FF,FB,F0) A(FF,FF,FB,F0) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,D7,D7,D7) 
					A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,DD,DD,DD) A(FF,E3,E3,E3) 
					A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) 
					A(FF,FF,FB,F0) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,EA,EA,EA) A(FF,66,66,99) A(FF,00,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,00,33,66) A(FF,33,33,66) 
					A(FF,33,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,00,33,66) A(FF,99,99,CC) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,99,CC,CC) A(FF,00,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,66,66,99) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,00,33,66) A(FF,33,33,66) A(FF,00,33,66) A(FF,33,66,99) A(FF,D7,D7,D7) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,33,33,66) 
					A(FF,33,33,66) A(FF,33,66,99) A(FF,66,99,99) A(FF,CC,CC,CC) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,E3,E3,E3) A(FF,33,66,99) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,33) 
					A(FF,66,99,99) A(FF,F8,F8,F8) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,99,99,CC) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,33) A(FF,33,66,66) A(FF,FF,FF,FF) 
					A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,00,33,33) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,33,66,66) A(FF,CB,CB,CB) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,00,33,33) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,33) A(FF,00,33,66) A(FF,C0,C0,C0) A(FF,FF,FF,FF) 
					A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,E3,E3,E3) A(FF,33,66,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,99) A(FF,66,66,99) A(FF,33,66,99) A(FF,33,66,99) 
					A(FF,33,66,99) A(FF,33,66,99) A(FF,33,66,99) A(FF,33,66,99) A(FF,A0,A0,A4) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,A0,A0,A4) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,66) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_6 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,FF,FF,FF) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,66) A(FF,C0,C0,C0) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,FF,FF,FF) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,99) A(FF,33,66,99) A(FF,33,66,99) A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,E3,E3,E3) A(FF,33,66,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CB,CB,CB) 
					A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,99,99,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,66) A(FF,D7,D7,D7) A(FF,CC,CC,CC) A(FF,D7,D7,D7) 
					A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,00,33,33) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,A0,A0,A4) 
					A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,E3,E3,E3) A(FF,FF,FF,FF) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,B2,B2,B2) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,66,99,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,86,86,86) A(FF,DD,DD,DD) A(FF,E3,E3,E3) 
					A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,E3,E3,E3) 
					A(FF,33,66,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,AD,A9,90) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CB,CB,CB) A(FF,E3,E3,E3) A(FF,96,96,96) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,33,66,66) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,CB,CB,CB) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,00,33,33) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,FF,FF,FF) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,33,33,66) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,AD,A9,90) A(FF,B2,B2,B2) A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,33,66,66) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,E3,E3,E3) A(FF,33,66,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,80,80,80) A(FF,96,96,96) 
					A(FF,86,86,86) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CB,CB,CB) A(FF,E3,E3,E3) 
					A(FF,96,96,96) A(FF,00,33,33) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,66) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,EA,EA,EA) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,00,33,33) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,86,86,86) A(FF,A0,A0,A4) A(FF,B2,B2,B2) 
					A(FF,CC,CC,CC) A(FF,FF,FB,F0) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,96,96,96) A(FF,96,96,96) A(FF,96,96,96) A(FF,96,96,96) 
					A(FF,A0,A0,A4) A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,66) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,EA,EA,EA) 
					A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,E3,E3,E3) A(FF,33,66,99) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,80,80,80) A(FF,86,86,86) A(FF,86,86,86) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,B2,B2,B2) 
					A(FF,C0,C0,C0) A(FF,CB,CB,CB) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,66,99,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,99,99,99) 
					A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,00,33,33) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,33,33,66) A(FF,80,80,80) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,CB,CB,CB) A(FF,F1,F1,F1) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) 
					A(FF,80,80,80) A(FF,86,86,86) A(FF,86,86,86) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,66,66,66) 
					A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,DD,DD,DD) A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,33) A(FF,77,77,77) A(FF,86,86,86) A(FF,96,96,96) A(FF,B2,B2,B2) 
					A(FF,CB,CB,CB) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,F8,F8,F8) A(FF,66,99,99) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,33) A(FF,33,33,66) A(FF,99,99,99) A(FF,99,99,99) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,FF,FB,F0) A(FF,FF,FB,F0) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,00,33,33) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,77,77,77) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,F1,F1,F1) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,86,86,86) A(FF,86,86,86) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,96,96,96) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,80,80,80) A(FF,86,86,86) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,DD,DD,DD) A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,33,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,66,66,99) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,EA,EA,EA) 
					A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,A0,A0,A4) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,33) A(FF,00,00,33) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,77,77,77) 
					A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,F1,F1,F1) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,80,80,80) A(FF,86,86,86) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_7 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,A0,A0,A4) A(FF,86,86,86) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,99) A(FF,86,86,86) A(FF,86,86,86) A(FF,99,99,99) 
					A(FF,C0,C0,C0) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,DD,DD,DD) 
					A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,33,66,66) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,99,99,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,77,77,77) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,EA,EA,EA) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,66,66,66) 
					A(FF,A0,A0,A4) A(FF,86,86,86) A(FF,86,86,86) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,D7,D7,D7) A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,33,66,99) A(FF,CC,CC,CC) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) 
					A(FF,A0,A0,A4) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,33,33,66) A(FF,33,66,66) 
					A(FF,33,66,66) A(FF,33,66,66) A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,77,77,77) A(FF,86,86,86) A(FF,A0,A0,A4) 
					A(FF,C0,C0,C0) A(FF,EA,EA,EA) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,66,99,99) A(FF,B2,B2,B2) A(FF,96,96,96) A(FF,86,86,86) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,DD,DD,DD) 
					A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,D7,D7,D7) A(FF,33,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,66,66,66) A(FF,77,77,77) A(FF,80,80,80) A(FF,86,86,86) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,CC,CC,CC) 
					A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,99,99,CC) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,86,86,86) 
					A(FF,86,86,86) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CB,CB,CB) A(FF,CC,CC,CC) A(FF,CB,CB,CB) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,77,77,77) A(FF,86,86,86) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,EA,EA,EA) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,33,33,66) A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,66,99,99) A(FF,A0,A0,A4) A(FF,86,86,86) A(FF,96,96,96) 
					A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,D7,D7,D7) A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,77,77,77) A(FF,80,80,80) A(FF,80,80,80) A(FF,96,96,96) 
					A(FF,A0,A0,A4) A(FF,AD,A9,90) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,FF,FB,F0) A(FF,99,99,CC) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,86,86,86) A(FF,77,77,77) A(FF,80,80,80) A(FF,96,96,96) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,66,66,66) A(FF,86,86,86) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,EA,EA,EA) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,77,77,77) A(FF,80,80,80) A(FF,66,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,86,86,86) A(FF,96,96,96) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,F8,F8,F8) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,D7,D7,D7) A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,77,77,77) A(FF,80,80,80) A(FF,77,77,77) A(FF,86,86,86) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) 
					A(FF,E3,E3,E3) A(FF,FF,FB,F0) A(FF,A0,A0,A4) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,80,80,80) A(FF,77,77,77) A(FF,80,80,80) 
					A(FF,96,96,96) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,66,66,66) 
					A(FF,86,86,86) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,EA,EA,EA) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,80,80,80) A(FF,80,80,80) 
					A(FF,80,80,80) A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,66) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,CC,CC,CC) 
					A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,D7,D7,D7) 
					A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,77,77,77) A(FF,80,80,80) A(FF,80,80,80) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) 
					A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,FF,FF,FF) A(FF,A0,A0,A4) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,33,33,66) A(FF,86,86,86) A(FF,80,80,80) A(FF,86,86,86) A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,66,66,66) A(FF,86,86,86) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,F1,F1,F1) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,77,77,77) A(FF,80,80,80) A(FF,86,86,86) A(FF,80,80,80) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,66,66,66) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,F1,F1,F1) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_8 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,D7,D7,D7) A(FF,33,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,77,77,77) A(FF,80,80,80) 
					A(FF,86,86,86) A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,FF,FF,FF) 
					A(FF,A0,A0,A4) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,86,86,86) A(FF,86,86,86) A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,C0,C0,C0) 
					A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,CC,CC,CC) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,77,77,77) A(FF,86,86,86) A(FF,A0,A0,A4) 
					A(FF,C0,C0,C0) A(FF,F1,F1,F1) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,80,80,80) A(FF,80,80,80) A(FF,80,80,80) A(FF,96,96,96) 
					A(FF,66,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,66,99,99) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,F8,F8,F8) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,DD,DD,DD) A(FF,33,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,80,80,80) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,FF,FB,F0) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,F8,F8,F8) A(FF,FF,FB,F0) A(FF,FF,FF,FF) A(FF,A0,A0,A4) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,86,86,86) 
					A(FF,86,86,86) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,33,33,66) A(FF,77,77,77) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,F1,F1,F1) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) 
					A(FF,80,80,80) A(FF,86,86,86) A(FF,86,86,86) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) 
					A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,E7,E7,D6) A(FF,F8,F8,F8) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,DD,DD,DD) A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,C0,C0,C0) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,A0,A0,A4) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,96,96,96) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,CB,CB,CB) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,FF,FF,FF) 
					A(FF,F1,F1,F1) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,77,77,77) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,F1,F1,F1) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,80,80,80) A(FF,86,86,86) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,66,66,99) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,F8,F8,F8) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,D7,D7,D7) A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,C0,C0,C0) 
					A(FF,FF,FB,F0) A(FF,FF,FB,F0) A(FF,99,99,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,96,96,96) A(FF,96,96,96) A(FF,B2,B2,B2) 
					A(FF,CC,CC,CC) A(FF,E3,E3,E3) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,00,33,33) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,77,77,77) 
					A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,EA,EA,EA) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,80,80,80) A(FF,96,96,96) 
					A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,CB,CB,CB) A(FF,CC,CC,CC) A(FF,80,80,80) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,66,99,99) 
					A(FF,CB,CB,CB) A(FF,E7,E7,D6) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,DD,DD,DD) 
					A(FF,33,66,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,B2,B2,B2) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,99,99,99) A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,33,33,66) A(FF,96,96,96) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,E3,E3,E3) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,33,33,66) A(FF,77,77,77) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,EA,EA,EA) A(FF,00,33,66) A(FF,00,33,66) 
					A(FF,00,33,66) A(FF,33,33,66) A(FF,86,86,86) A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,33,33,66) 
					A(FF,00,33,66) A(FF,00,33,66) A(FF,00,33,66) A(FF,33,66,66) A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,CB,CB,CB) A(FF,B2,B2,B2) A(FF,96,96,96) A(FF,86,86,86) 
					A(FF,96,96,96) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,CB,CB,CB) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,CB,CB,CB) A(FF,CC,CC,CC) A(FF,D7,D7,D7) 
					A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,D7,D7,D7) A(FF,B2,B2,B2) A(FF,99,99,99) A(FF,86,86,86) A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,D7,D7,D7) A(FF,E3,E3,E3) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FB,F0) A(FF,E7,E7,D6) A(FF,C0,C0,C0) A(FF,A0,A0,A4) A(FF,96,96,96) A(FF,96,96,96) A(FF,A0,A0,A4) 
					A(FF,C0,C0,C0) A(FF,DD,DD,DD) A(FF,F1,F1,F1) A(FF,E7,E7,D6) A(FF,CB,CB,CB) A(FF,A0,A0,A4) A(FF,96,96,96) A(FF,96,96,96) A(FF,B2,B2,B2) A(FF,CC,CC,CC) 
					A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,CC,CC,CC) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,C0,C0,C0) 
					A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,D7,D7,D7) A(FF,D7,D7,D7) 
					A(FF,C0,C0,C0) A(FF,A0,A0,A4) A(FF,96,96,96) A(FF,86,86,86) A(FF,86,86,86) A(FF,96,96,96) A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_9 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,99,99,99) A(FF,99,99,99) 
					A(FF,A0,A0,A4) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,EA,EA,EA) A(FF,D7,D7,D7) A(FF,C0,C0,C0) 
					A(FF,A0,A0,A4) A(FF,99,99,99) A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,C0,C0,C0) A(FF,B2,B2,B2) 
					A(FF,99,99,99) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,CC,CC,CC) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,D7,D7,D7) A(FF,C0,C0,C0) A(FF,A0,A0,A4) 
					A(FF,99,99,99) A(FF,99,99,99) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,CC,CC,CC) A(FF,B2,B2,B2) A(FF,A0,A0,A4) A(FF,99,99,99) A(FF,96,96,96) A(FF,99,99,99) 
					A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,A0,A0,A4) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,D7,D7,D7) 
					A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,CC,CC,CC) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,E3,E3,E3) 
					A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,CC,CC,CC) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,F1,F1,F1) 
					A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,DD,DD,DD) A(FF,EA,EA,EA) 
					A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,CC,CC,CC) 
					A(FF,C0,C0,C0) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,B2,B2,B2) A(FF,C0,C0,C0) A(FF,C0,C0,C0) 
					A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,D7,D7,D7) A(FF,C0,C0,C0) A(FF,C0,C0,C0) A(FF,CC,CC,CC) A(FF,D7,D7,D7) 
					A(FF,E3,E3,E3) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,CC,CC,CC) A(FF,C0,C0,C0) 
					A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,CC,CC,CC) A(FF,C0,C0,C0) A(FF,CC,CC,CC) 
					A(FF,D7,D7,D7) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,D7,D7,D7) A(FF,C0,C0,C0) A(FF,C0,C0,C0) 
					A(FF,C0,C0,C0) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,D7,D7,D7) A(FF,D7,D7,D7) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,CC,CC,CC) 
					A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,CC,CC,CC) A(FF,D7,D7,D7) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,E3,E3,E3) 
					A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) 
					A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) 
					A(FF,EA,EA,EA) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) 
					A(FF,EA,EA,EA) A(FF,E3,E3,E3) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,E3,E3,E3) 
					A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,E3,E3,E3) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) 
					A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,F1,F1,F1) 
					A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,F1,F1,F1) A(FF,F1,F1,F1) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) A(FF,EA,EA,EA) 
					A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,F1,F1,F1) 
					A(FF,F1,F1,F1) A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,F1,F1,F1) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end
	
	c_colors_10 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
			c_colors_1 (a_ptr, 400)
			c_colors_2 (a_ptr, 800)
			c_colors_3 (a_ptr, 1200)
			c_colors_4 (a_ptr, 1600)
			c_colors_5 (a_ptr, 2000)
			c_colors_6 (a_ptr, 2400)
			c_colors_7 (a_ptr, 2800)
			c_colors_8 (a_ptr, 3200)
			c_colors_9 (a_ptr, 3600)
			c_colors_10 (a_ptr, 4000)
		end

end