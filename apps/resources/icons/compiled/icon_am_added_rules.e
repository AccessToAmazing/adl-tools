note
	description: "Icon loader class generated by icondbc"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_AM_ADDED_RULES

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "am/added/rules"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,18,8C) A(FF,00,20,90) A(FF,00,28,94) 
					A(FF,00,30,98) A(FF,00,38,9C) A(FF,00,40,A0) A(FF,00,48,A4) A(FF,00,50,A8) A(FF,00,58,AC) A(FF,00,60,B0) A(FF,00,68,B4) A(FF,00,70,B8) A(FF,00,78,BC) 
					A(FF,00,80,C0) A(00,00,00,00) A(00,00,00,00) A(FF,00,20,90) A(FF,00,28,94) A(FF,00,30,98) A(FF,00,38,9C) A(FF,00,40,A0) A(FF,00,48,A4) A(FF,00,50,A8) 
					A(FF,00,58,AC) A(FF,00,60,B0) A(FF,00,68,B4) A(FF,00,70,B8) A(FF,00,78,BC) A(FF,00,80,C0) A(FF,00,87,C3) A(00,00,00,00) A(00,00,00,00) A(FF,00,28,94) 
					A(FF,00,30,98) A(FF,00,38,9C) A(FF,00,40,A0) A(FF,00,48,A4) A(FF,00,50,A8) A(FF,00,58,AC) A(FF,00,60,B0) A(FF,00,68,B4) A(FF,00,70,B8) A(FF,00,78,BC) 
					A(FF,00,80,C0) A(FF,00,87,C3) A(FF,00,8F,C7) A(00,00,00,00) A(00,00,00,00) A(FF,FF,68,00) A(FF,00,38,9C) A(FF,FF,86,00) A(FF,00,48,A4) A(FF,00,50,A8) 
					A(FF,00,58,AC) A(FF,00,60,B0) A(FF,FF,D2,00) A(FF,00,70,B8) A(FF,FF,F0,00) A(FF,00,80,C0) A(FF,00,87,C3) A(FF,00,8F,C7) A(FF,FF,D2,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,FF,68,00) A(FF,00,40,A0) A(FF,FF,86,00) A(FF,FF,95,00) A(FF,00,58,AC) A(FF,00,60,B0) A(FF,00,68,B4) A(FF,FF,D2,00) A(FF,00,78,BC) 
					A(FF,FF,F0,00) A(FF,00,87,C3) A(FF,00,8F,C7) A(FF,00,97,CB) A(FF,FF,D2,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,68,00) A(FF,00,48,A4) A(FF,FF,86,00) 
					A(FF,00,58,AC) A(FF,FF,A4,00) A(FF,00,68,B4) A(FF,00,70,B8) A(FF,FF,D2,00) A(FF,00,80,C0) A(FF,00,87,C3) A(FF,FF,FF,00) A(FF,00,97,CB) A(FF,FF,E1,00) 
					A(FF,00,A7,D3) A(00,00,00,00) A(00,00,00,00) A(FF,FF,68,00) A(FF,00,50,A8) A(FF,FF,86,00) A(FF,00,60,B0) A(FF,FF,A4,00) A(FF,00,70,B8) A(FF,00,78,BC) 
					A(FF,FF,D2,00) A(FF,00,87,C3) A(FF,00,8F,C7) A(FF,FF,FF,00) A(FF,00,9F,CF) A(FF,FF,E1,00) A(FF,00,AF,D7) A(00,00,00,00) A(00,00,00,00) A(FF,FF,68,00) 
					A(FF,00,58,AC) A(FF,FF,86,00) A(FF,00,68,B4) A(FF,00,70,B8) A(FF,FF,B4,00) A(FF,00,80,C0) A(FF,FF,D2,00) A(FF,00,8F,C7) A(FF,00,97,CB) A(FF,FF,FF,00) 
					A(FF,00,A7,D3) A(FF,FF,E1,00) A(FF,00,B7,DB) A(00,00,00,00) A(00,00,00,00) A(FF,FF,68,00) A(FF,00,60,B0) A(FF,FF,86,00) A(FF,00,70,B8) A(FF,00,78,BC) 
					A(FF,FF,B4,00) A(FF,00,87,C3) A(FF,FF,D2,00) A(FF,00,97,CB) A(FF,00,9F,CF) A(FF,FF,FF,00) A(FF,00,AF,D7) A(FF,FF,E1,00) A(FF,00,BF,DF) A(00,00,00,00) 
					A(00,00,00,00) A(FF,FF,68,00) A(FF,00,68,B4) A(FF,FF,86,00) A(FF,00,78,BC) A(FF,00,80,C0) A(FF,00,87,C3) A(FF,FF,C3,00) A(FF,FF,D2,00) A(FF,00,9F,CF) 
					A(FF,00,A7,D3) A(FF,FF,FF,00) A(FF,00,B7,DB) A(FF,FF,E1,00) A(FF,00,C7,E3) A(00,00,00,00) A(00,00,00,00) A(FF,FF,68,00) A(FF,00,70,B8) A(FF,FF,86,00) 
					A(FF,00,80,C0) A(FF,00,87,C3) A(FF,00,8F,C7) A(FF,00,97,CB) A(FF,FF,D2,00) A(FF,00,A7,D3) A(FF,00,AF,D7) A(FF,00,B7,DB) A(FF,FF,F0,00) A(FF,00,C7,E3) 
					A(FF,00,CF,E7) A(00,00,00,00) A(00,00,00,00) A(FF,00,70,B8) A(FF,00,78,BC) A(FF,00,80,C0) A(FF,00,87,C3) A(FF,00,8F,C7) A(FF,00,97,CB) A(FF,00,9F,CF) 
					A(FF,00,A7,D3) A(FF,00,AF,D7) A(FF,00,B7,DB) A(FF,00,BF,DF) A(FF,00,C7,E3) A(FF,00,CF,E7) A(FF,00,D7,EB) A(00,00,00,00) A(00,00,00,00) A(FF,00,78,BC) 
					A(FF,00,80,C0) A(FF,00,87,C3) A(FF,00,8F,C7) A(FF,00,97,CB) A(FF,00,9F,CF) A(FF,00,A7,D3) A(FF,00,AF,D7) A(FF,00,B7,DB) A(FF,00,BF,DF) A(FF,00,C7,E3) 
					A(FF,00,CF,E7) A(FF,00,D7,EB) A(FF,00,DF,EF) A(00,00,00,00) A(00,00,00,00) A(FF,00,80,C0) A(FF,00,87,C3) A(FF,00,8F,C7) A(FF,00,97,CB) A(FF,00,9F,CF) 
					A(FF,00,A7,D3) A(FF,00,AF,D7) A(FF,00,B7,DB) A(FF,00,BF,DF) A(FF,00,C7,E3) A(FF,00,CF,E7) A(FF,00,D7,EB) A(FF,00,DF,EF) A(FF,00,E7,F3) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end