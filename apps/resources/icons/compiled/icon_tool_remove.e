note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_TOOL_REMOVE

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "tool/remove"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(8F,D0,63,63) A(AF,CA,53,53) A(10,B0,17,17) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(10,AF,19,19) A(AF,C8,50,50) A(8F,C5,4A,4A) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(9F,D3,69,69) A(FF,E6,98,98) A(FF,CC,54,54) 
					A(CF,BA,2B,2B) A(10,B0,18,18) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(10,AF,19,19) A(CF,C8,50,50) A(FF,D8,74,74) A(FF,C4,38,38) 
					A(9F,BB,29,29) A(00,00,00,00) A(8F,D0,63,63) A(FF,E6,98,98) A(FF,CC,53,53) A(FF,C6,41,41) A(FF,C5,3E,3E) A(CF,B9,28,28) A(10,AF,19,19) A(00,00,00,00) 
					A(00,00,00,00) A(10,AE,1A,1A) A(CF,C7,50,50) A(FF,D8,72,72) A(FF,C5,35,35) A(FF,C4,32,32) A(FF,C4,32,32) A(8F,BA,27,27) A(AF,CA,53,53) A(FF,CC,54,54) 
					A(FF,C6,41,41) A(FF,C5,3E,3E) A(FF,C5,3B,3B) A(FF,C4,39,39) A(CF,B9,26,26) A(10,AE,19,19) A(10,AE,1A,1A) A(CF,C7,50,50) A(FF,D8,71,71) A(FF,C5,33,33) 
					A(FF,C5,30,30) A(FF,C5,30,30) A(FF,C5,30,30) A(AF,B8,24,24) A(10,B1,17,17) A(CF,BA,2B,2B) A(FF,C5,3E,3E) A(FF,C5,3B,3B) A(FF,C4,39,39) A(FF,C4,36,36) 
					A(FF,C4,34,34) A(CF,B8,25,25) A(CF,C7,4F,4F) A(FF,D9,70,70) A(FF,C6,32,32) A(FF,C6,2F,2F) A(FF,C6,2E,2E) A(FF,C7,2E,2E) A(CF,B9,24,24) A(10,AD,1A,1A) 
					A(00,00,00,00) A(10,B0,18,18) A(CF,B9,28,28) A(FF,C4,39,39) A(FF,C4,36,36) A(FF,C4,34,34) A(FF,C5,32,32) A(FF,C5,30,30) A(FF,D7,68,68) A(FF,C7,31,31) 
					A(FF,C7,2E,2E) A(FF,C8,2E,2E) A(FF,C9,2D,2D) A(CF,B9,23,23) A(10,AD,1B,1B) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(10,AF,19,19) A(CF,B9,26,26) 
					A(FF,C4,34,34) A(FF,C5,32,32) A(FF,C5,30,30) A(FF,C6,2F,2F) A(FF,C5,28,28) A(FF,C4,20,20) A(FF,C5,1F,1F) A(FF,C6,1F,1F) A(CF,BA,23,23) A(10,AC,1B,1B) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(10,AE,19,19) A(CF,B8,25,25) A(FF,C4,2E,2E) A(FF,C1,1D,1D) A(FF,BE,0E,0E) 
					A(FF,C0,0E,0E) A(FF,C2,10,10) A(FF,C5,13,13) A(CF,B8,18,18) A(10,AC,1C,1C) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(10,AE,1A,1A) A(CF,C5,46,46) A(FF,CF,4D,4D) A(FF,BD,0C,0C) A(FF,C0,0E,0E) A(FF,C3,11,11) A(FF,C6,14,14) A(FF,C9,16,16) A(CF,BA,1B,1B) 
					A(10,AB,1C,1C) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(10,AE,19,19) A(CF,C4,46,46) A(FF,D0,56,56) A(FF,BC,0E,0E) 
					A(FF,BF,0E,0E) A(FF,C3,11,11) A(FF,C6,14,14) A(FF,CA,17,17) A(FF,CD,1A,1A) A(FF,D1,1E,1E) A(CF,BE,1E,1E) A(10,AA,1D,1D) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(10,AF,19,19) A(CF,C4,45,45) A(FF,D0,55,55) A(FF,BB,0C,0C) A(FF,BE,0C,0C) A(FF,C1,0F,0F) A(FF,C5,13,13) A(FF,C9,17,17) A(FF,CE,1B,1B) 
					A(FF,D2,1F,1F) A(FF,D6,22,22) A(FF,D9,25,25) A(CF,C1,22,22) A(10,AA,1D,1D) A(00,00,00,00) A(10,AF,19,19) A(CF,C4,45,45) A(FF,CF,55,55) A(FF,B9,0B,0B) 
					A(FF,BB,0A,0A) A(FF,BF,0D,0D) A(FF,C3,11,11) A(CF,B8,18,18) A(CF,BB,1B,1B) A(FF,D1,1E,1E) A(FF,D6,23,23) A(FF,DB,27,27) A(FF,E0,2B,2B) A(FF,E3,2E,2E) 
					A(CF,C5,26,26) A(10,A9,1E,1E) A(AF,C4,44,44) A(FF,CE,54,54) A(FF,B7,09,09) A(FF,B9,08,08) A(FF,BC,0B,0B) A(FF,C0,0E,0E) A(CF,B7,16,16) A(10,AC,1C,1C) 
					A(10,AB,1C,1C) A(CF,BE,1F,1F) A(FF,DA,26,26) A(FF,E0,2C,2C) A(FF,E6,31,31) A(FF,EB,35,35) A(FF,EC,36,36) A(AF,C7,29,29) A(8F,BF,37,37) A(FF,B5,07,07) 
					A(FF,B7,06,06) A(FF,BA,09,09) A(FF,BD,0C,0C) A(CF,B5,15,15) A(10,AC,1B,1B) A(00,00,00,00) A(00,00,00,00) A(10,AA,1D,1D) A(CF,C2,23,23) A(FF,E4,2F,2F) 
					A(FF,EC,36,36) A(FF,F2,3B,3B) A(FF,F4,3D,3D) A(8F,D0,2E,2E) A(00,00,00,00) A(9F,B2,0D,0D) A(FF,B7,06,06) A(FF,BA,09,09) A(CF,B4,14,14) A(10,AD,1B,1B) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(10,AA,1D,1D) A(CF,C6,27,27) A(FF,EE,38,38) A(FF,F7,40,40) A(9F,DA,35,35) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(8F,B3,0F,0F) A(AF,B3,12,12) A(10,AD,1A,1A) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(10,A9,1E,1E) A(AF,C9,2A,2A) A(8F,D3,2F,2F) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end