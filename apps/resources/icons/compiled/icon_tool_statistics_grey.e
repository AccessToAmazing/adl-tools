note
	description: "Icon loader class generated by icondbc"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "See notice at bottom of class"

class ICON_TOOL_STATISTICS_GREY

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "tool/statistics_grey"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,1F,1F,1F) A(FF,64,64,64) A(FF,A4,A4,A4) A(FF,B5,B5,B5) 
					A(FF,B5,B5,B5) A(FF,A4,A4,A4) A(FF,64,64,64) A(FF,1F,1F,1F) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,5B,5B,5B) A(FF,A8,A8,A8) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,D3,D3,D3) A(FF,D3,D3,D3) A(FF,DD,DD,DD) A(FF,E2,E2,E2) A(FF,A7,A7,A7) 
					A(FF,5C,5C,5C) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,39,39,39) A(FF,A0,A0,A0) A(FF,DD,DD,DD) A(FF,00,00,00) 
					A(FF,00,00,00) A(FF,00,00,00) A(FF,00,00,00) A(FF,00,00,00) A(FF,00,00,00) A(FF,CA,CA,CA) A(FF,9F,9F,9F) A(FF,35,35,35) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(FF,7B,7B,7B) A(FF,B7,B7,B7) A(FF,DD,DD,DD) A(FF,00,00,00) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,E2,E2,E2) A(FF,DD,DD,DD) 
					A(FF,00,00,00) A(FF,DD,DD,DD) A(FF,B7,B7,B7) A(FF,7B,7B,7B) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,35,35,35) A(FF,8F,8F,8F) A(FF,A1,A1,A1) 
					A(FF,E2,E2,E2) A(FF,00,00,00) A(FF,00,00,00) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,E2,E2,E2) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,A1,A1,A1) A(FF,8F,8F,8F) 
					A(FF,35,35,35) A(00,00,00,00) A(00,00,00,00) A(FF,33,33,33) A(FF,98,98,98) A(FF,95,95,95) A(FF,DD,DD,DD) A(FF,DD,DD,DD) A(FF,00,00,00) A(FF,00,00,00) 
					A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,E2,E2,E2) A(FF,E2,E2,E2) A(FF,95,95,95) A(FF,98,98,98) A(FF,33,33,33) A(00,00,00,00) A(00,00,00,00) A(FF,2F,2F,2F) 
					A(FF,95,95,95) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,00,00,00) A(FF,00,00,00) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,DD,DD,DD) 
					A(FF,DD,DD,DD) A(FF,95,95,95) A(FF,2F,2F,2F) A(00,00,00,00) A(00,00,00,00) A(FF,2C,2C,2C) A(FF,8C,8C,8C) A(FF,8D,8D,8D) A(FF,DD,DD,DD) A(FF,DD,DD,DD) 
					A(FF,00,00,00) A(FF,00,00,00) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,8D,8D,8D) A(FF,8C,8C,8C) A(FF,2C,2C,2C) A(00,00,00,00) 
					A(00,00,00,00) A(FF,28,28,28) A(FF,78,78,78) A(FF,8C,8C,8C) A(FF,DD,DD,DD) A(FF,00,00,00) A(FF,00,00,00) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,E2,E2,E2) 
					A(FF,DD,DD,DD) A(FF,E2,E2,E2) A(FF,8C,8C,8C) A(FF,78,78,78) A(FF,28,28,28) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,56,56,56) A(FF,92,92,92) 
					A(FF,E2,E2,E2) A(FF,00,00,00) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,00,00,00) A(FF,DD,DD,DD) A(FF,92,92,92) A(FF,55,55,55) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,23,23,23) A(FF,6C,6C,6C) A(FF,DD,DD,DD) A(FF,00,00,00) A(FF,00,00,00) A(FF,00,00,00) 
					A(FF,00,00,00) A(FF,00,00,00) A(FF,00,00,00) A(FF,97,97,97) A(FF,6C,6C,6C) A(FF,1E,1E,1E) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,2E,2E,2E) A(FF,68,68,68) A(FF,E2,E2,E2) A(FF,DD,DD,DD) A(FF,D3,D3,D3) A(FF,D3,D3,D3) A(FF,DD,DD,DD) A(FF,E2,E2,E2) A(FF,68,68,68) 
					A(FF,2E,2E,2E) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,09,09,09) A(FF,25,25,25) 
					A(FF,57,57,57) A(FF,6C,6C,6C) A(FF,6B,6B,6B) A(FF,57,57,57) A(FF,25,25,25) A(FF,09,09,09) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end