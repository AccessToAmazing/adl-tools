note
	description: "Dialog for the user to enter the repository paths.%
		%The original version of this class was generated by EiffelBuild."
	date: "$Date: 2005/01/07 19:38:13 $"
	revision: "$Revision$"

class
	REPOSITORY_DIALOG

inherit
	REPOSITORY_DIALOG_IMP

	GUI_CONTROLLER_TOOLS
		export
			{NONE} all
		undefine
			copy, default_create
		end

	EV_STOCK_PIXMAPS
		rename
			implementation as pixmaps_implementation
		export
			{NONE} all
		undefine
			copy, default_create
		end

	SHARED_SOURCE_REPOSITORIES
		export
			{NONE} all
		undefine
			copy, default_create
		end

feature -- Definition

	new_profile_dummy: STRING is "new_profile"

feature {NONE} -- Initialization

	user_initialization
			-- Called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		do
			set_icon_pixmap (adl_workbench_ico)
			repository_dialog_cancel_button.select_actions.extend (agent hide)
			set_default_cancel_button (repository_dialog_cancel_button)
			set_default_push_button (repository_dialog_ok_button)
--			show_actions.extend (agent repository_dialog_reference_path_cb.set_focus)
--			repository_dialog_reference_path_cb.focus_in_actions.extend (agent on_select_all (repository_dialog_reference_path_cb))
			repository_dialog_work_path_text.focus_in_actions.extend (agent on_select_all (repository_dialog_work_path_text))
			populate_controls
		end

feature -- Status

	has_changed_profile: BOOLEAN
			-- Has the user OK'ed valid changes to one or more of the paths?

feature {NONE} -- Implementation

	populate_controls
			-- Initialise the dialog's widgets from shared settings.
		local
			ref_profiles: attached HASH_TABLE [ARRAYED_LIST[STRING], STRING]
		do
			ref_profiles := repository_profiles
			from ref_profiles.start until ref_profiles.off loop
				populate_ev_combo_from_hash_keys (profile_combo_box, ref_profiles)
				if not current_repository_profile.is_empty then
					profile_combo_box.do_all (
						agent (li: EV_LIST_ITEM)
							do
								if li.text.same_string (current_repository_profile) then
									li.enable_select
								end
							end
					)
					repository_dialog_reference_path_text.set_text (ref_profiles.item (current_repository_profile).i_th(1))
					if ref_profiles.item (current_repository_profile).count > 1 then
						repository_dialog_work_path_text.set_text (ref_profiles.item (current_repository_profile).i_th(2))
					end
				end
				ref_profiles.forth
			end
		end

	repository_dialog_ok
			-- When the user clicks the OK button, save the changes and rebuild `archetype_directory'.
		local
			error_dialog: EV_INFORMATION_DIALOG
			paths_invalid: BOOLEAN
			ref_dir, work_dir, prof: STRING
			prof_paths: ARRAYED_LIST[STRING]
			rep_profs: attached HASH_TABLE [ARRAYED_LIST[STRING], STRING]
			has_changed_profile_paths: BOOLEAN
		do
			prof := profile_combo_box.text.as_string_8
			has_changed_profile := not prof.same_string (current_repository_profile)
			set_current_repository_profile(prof)

			create prof_paths.make (0)
			ref_dir := repository_dialog_reference_path_text.text.as_string_8
			if directory_exists (ref_dir) then
				prof_paths.extend (ref_dir)
				has_changed_profile_paths := not ref_dir.same_string(reference_repository_path)
			else
				create error_dialog.make_with_text (create_message_line ("ref_repo_not_found", <<ref_dir>>))
				error_dialog.show_modal_to_window (Current)
				paths_invalid := True
			end

			work_dir := repository_dialog_work_path_text.text.as_string_8
			if work_dir.is_empty or else not (work_dir.starts_with (ref_dir) or ref_dir.starts_with (work_dir))
			and then source_repositories.valid_working_repository_path (work_dir) then
				prof_paths.extend (work_dir)
				has_changed_profile_paths := has_changed_profile_paths or not work_dir.same_string(work_repository_path)
			else
				create error_dialog.make_with_text (create_message_line ("work_repo_not_invalid", <<work_dir>>))
				error_dialog.show_modal_to_window (Current)
				paths_invalid := True
			end

			if not paths_invalid then
				if has_changed_profile_paths then
					rep_profs := repository_profiles
					rep_profs.force (prof_paths, prof)
					set_repository_profiles (rep_profs)
				end
				hide
			end
		end

	select_profile
			-- Called by `select_actions' of `profile_combo_box'.
		local
			ref_profiles: attached HASH_TABLE [ARRAYED_LIST[STRING], STRING]
		do
			ref_profiles := repository_profiles
			if not profile_combo_box.text.is_empty then
				if not profile_combo_box.text.as_string_8.same_string (current_repository_profile) then
					repository_dialog_reference_path_text.set_text (ref_profiles.item (profile_combo_box.text.as_string_8).i_th(1))
					if ref_profiles.item (profile_combo_box.text.as_string_8).count > 1 then
						repository_dialog_work_path_text.set_text (ref_profiles.item (profile_combo_box.text.as_string_8).i_th(2))
					end
					has_changed_profile := True
				end
			end
		end

	add_new_profile
			-- Called by `select_actions' of `profile_add_button'.
		local
			profs: ARRAYED_LIST[STRING]
		do
			profile_combo_box.select_actions.block
			create profs.make (0)
			profs.append (profile_combo_box.strings_8)
			profs.extend (new_profile_dummy)
			profile_combo_box.set_strings (profs)
			profile_combo_box.last.enable_select
			profile_combo_box.set_focus
			repository_dialog_reference_path_text.set_text ("")
			repository_dialog_work_path_text.set_text ("")
			profile_combo_box.select_actions.resume
		end

	remove_current_profile
			-- Called by `select_actions' of `profile_remove_button'.
		local
			question_dialog: EV_QUESTION_DIALOG
			error_dialog: EV_INFORMATION_DIALOG
			profs: ARRAYED_LIST[STRING]
			prof: STRING
			ref_profiles: attached HASH_TABLE [ARRAYED_LIST[STRING], STRING]
		do
			profile_combo_box.select_actions.block
			prof := profile_combo_box.text.as_string_8
			if not prof.is_empty then
				create question_dialog.make_with_text (create_message_line ("remove_profile_question", <<prof>>))
			--	question_dialog.set_title ("Save as " + format.as_upper)
				question_dialog.set_buttons (<<"Yes", "No">>)
				question_dialog.show_modal_to_window (Current)
				if question_dialog.selected_button.same_string ("Yes") then
					ref_profiles := repository_profiles
					create profs.make (0)
					profs.compare_objects
					profs.append (profile_combo_box.strings_8)
					profs.prune (prof)
					profile_combo_box.set_strings (profs)
					profile_combo_box.last.enable_select
					repository_dialog_reference_path_text.set_text (ref_profiles.item (current_repository_profile).i_th(1))
					if ref_profiles.item (current_repository_profile).count > 1 then
						repository_dialog_work_path_text.set_text (ref_profiles.item (current_repository_profile).i_th(2))
					end
					repository_profiles.remove (prof)
					set_current_repository_profile (profs.last)
				end
			else
				create error_dialog.make_with_text (create_message_line ("no_profile_to_remove", Void))
				error_dialog.show_modal_to_window (Current)
			end
			profile_combo_box.select_actions.resume
		end

	get_reference_repository_path
			-- Display a dialog for the user to select a new Reference Repository.
		local
			def_path: STRING
			error_dialog: EV_INFORMATION_DIALOG
		do
			if not profile_combo_box.text.as_string_8.is_empty then
				if reference_repository_path.is_empty then
					def_path := application_startup_directory
				else
					def_path := reference_repository_path
				end
				repository_dialog_reference_path_text.set_text (get_directory (def_path, Current))
			else
				create error_dialog.make_with_text (create_message_line ("profile_not_yet_defined", Void))
				error_dialog.show_modal_to_window (Current)
			end
		end

	get_work_repository_path
			-- Display a dialog for the user select the Work Repository.
		local
			def_path: STRING
			error_dialog: EV_INFORMATION_DIALOG
		do
			if not profile_combo_box.text.as_string_8.is_empty then
				if work_repository_path.is_empty then
					def_path := repository_dialog_reference_path_text.text
				else
					def_path := work_repository_path
				end
				repository_dialog_work_path_text.set_text (get_directory (def_path, Current))
			else
				create error_dialog.make_with_text (create_message_line ("profile_not_yet_defined", Void))
				error_dialog.show_modal_to_window (Current)
			end
		end

	on_select_all (text: EV_TEXT_FIELD)
			-- Select all text in `text', if any.
		do
			if text /= Void and then text.text_length > 0 then
				text.select_all
			end
		end

end


--|
--| ***** BEGIN LICENSE BLOCK *****
--| Version: MPL 1.1/GPL 2.0/LGPL 2.1
--|
--| The contents of this file are subject to the Mozilla Public License Version
--| 1.1 (the 'License'); you may not use this file except in compliance with
--| the License. You may obtain a copy of the License at
--| http://www.mozilla.org/MPL/
--|
--| Software distributed under the License is distributed on an 'AS IS' basis,
--| WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
--| for the specific language governing rights and limitations under the
--| License.
--|
--| The Original Code is repository_dialog.e.
--|
--| The Initial Developer of the Original Code is Thomas Beale.
--| Portions created by the Initial Developer are Copyright (C) 2003-2004
--| the Initial Developer. All Rights Reserved.
--|
--| Contributor(s):
--|
--| Alternatively, the contents of this file may be used under the terms of
--| either the GNU General Public License Version 2 or later (the 'GPL'), or
--| the GNU Lesser General Public License Version 2.1 or later (the 'LGPL'),
--| in which case the provisions of the GPL or the LGPL are applicable instead
--| of those above. If you wish to allow use of your version of this file only
--| under the terms of either the GPL or the LGPL, and not to allow others to
--| use your version of this file under the terms of the MPL, indicate your
--| decision by deleting the provisions above and replace them with the notice
--| and other provisions required by the GPL or the LGPL. If you do not delete
--| the provisions above, a recipient may use your version of this file under
--| the terms of any one of the MPL, the GPL or the LGPL.
--|
--| ***** END LICENSE BLOCK *****
--|
