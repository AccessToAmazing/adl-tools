note
	description: "[
		Objects that represent an EV_TITLED_WINDOW.
		The original version of this class was generated by EiffelBuild.
		This class is the implementation of an EV_TITLED_WINDOW generated by EiffelBuild.
		You should not modify this code by hand, as it will be re-generated every time
		 modifications are made to the project.
		 	]"
	generator: "EiffelBuild"
	date: "$Date$"
	revision: "$Revision$"

deferred class
	MAIN_WINDOW_IMP

inherit
	EV_TITLED_WINDOW
		redefine
			create_interface_objects, initialize, is_in_default_state
		end
			
	CONSTANTS
		undefine
			is_equal, default_create, copy
		end

feature {NONE}-- Initialization

	frozen initialize
			-- Initialize `Current'.
		do
			Precursor {EV_TITLED_WINDOW}
			initialize_constants

			
				-- Build widget structure.
			set_menu_bar (menu)
			menu.extend (file_menu)
			file_menu.extend (file_menu_open)
			file_menu.extend (file_menu_parse)
			file_menu.extend (file_menu_edit)
			file_menu.extend (l_ev_menu_separator_1)
			file_menu.extend (file_menu_save_as)
			file_menu.extend (l_ev_menu_separator_2)
			file_menu.extend (file_menu_exit)
			menu.extend (edit_menu)
			edit_menu.extend (edit_menu_copy)
			edit_menu.extend (edit_menu_select_all)
			edit_menu.extend (l_ev_menu_separator_3)
			edit_menu.extend (edit_menu_clipboard)
			menu.extend (view_menu)
			view_menu.extend (view_menu_differential)
			view_menu.extend (view_menu_flat)
			view_menu.extend (view_menu_new_tab)
			view_menu.extend (l_ev_menu_separator_4)
			view_menu.extend (view_menu_reset_layout)
			menu.extend (history_menu)
			history_menu.extend (history_menu_back)
			history_menu.extend (history_menu_forward)
			history_menu.extend (history_menu_separator)
			menu.extend (repository_menu)
			repository_menu.extend (repository_menu_build_all)
			repository_menu.extend (repository_menu_rebuild_all)
			repository_menu.extend (l_ev_menu_separator_5)
			repository_menu.extend (repository_menu_build_subtree)
			repository_menu.extend (repository_menu_rebuild_subtree)
			repository_menu.extend (l_ev_menu_separator_6)
			repository_menu.extend (repository_menu_export_html)
			repository_menu.extend (repository_menu_export_repository_report)
			repository_menu.extend (l_ev_menu_separator_7)
			repository_menu.extend (repository_menu_interrupt_build)
			repository_menu.extend (repository_menu_refresh)
			repository_menu.extend (l_ev_menu_separator_8)
			repository_menu.extend (repository_menu_set_repository)
			menu.extend (rm_schemas_menu)
			rm_schemas_menu.extend (rm_schemas_menu_reload_schemas)
			rm_schemas_menu.extend (l_ev_menu_separator_9)
			rm_schemas_menu.extend (rm_schemas_menu_configure_rm_schemas)
			menu.extend (xml_menu)
			xml_menu.extend (l_ev_menu_separator_10)
			xml_menu.extend (xml_menu_conv_rules)
			menu.extend (tools_menu)
			tools_menu.extend (tools_menu_clean_generated_files)
			tools_menu.extend (l_ev_menu_separator_11)
			tools_menu.extend (tools_menu_options)
			menu.extend (help_menu)
			help_menu.extend (help_menu_contents)
			help_menu.extend (help_menu_release_notes)
			help_menu.extend (help_menu_icons)
			help_menu.extend (l_ev_menu_separator_12)
			help_menu.extend (help_menu_clinical_knowledge_manager)
			help_menu.extend (help_menu_report_bug)
			help_menu.extend (help_menu_about)
			extend (ev_main_vbox)

			file_menu.set_text ("&File")
			file_menu_open.set_text ("&Open...")
			file_menu_parse.set_text ("&Compile and Display")
			file_menu_edit.set_text ("&Edit")
			file_menu_save_as.set_text ("Save &As...")
			file_menu_exit.set_text ("E&xit")
			edit_menu.set_text ("&Edit")
			edit_menu_copy.set_text ("&Copy")
			edit_menu_select_all.set_text ("Select &All")
			edit_menu_clipboard.set_text ("Clip&board...")
			view_menu.set_text ("&View")
			view_menu_differential.set_text ("&Differential")
			view_menu_flat.set_text ("&Flat")
			view_menu_new_tab.set_text ("New &Tab")
			view_menu_reset_layout.set_text ("&Reset tool layout")
			history_menu.set_text ("H&istory")
			history_menu_back.set_text ("&Back")
			history_menu_forward.set_text ("&Forward")
			repository_menu.set_text ("&Repository")
			repository_menu_build_all.set_text ("&Build All")
			repository_menu_rebuild_all.set_text ("&Rebuild All")
			repository_menu_build_subtree.set_text ("Build Sub&tree")
			repository_menu_rebuild_subtree.set_text ("Rebuild S&ubtree")
			repository_menu_export_html.set_text ("Export &HTML...")
			repository_menu_export_repository_report.set_text ("&Export Repository Report...")
			repository_menu_interrupt_build.disable_sensitive
			repository_menu_interrupt_build.set_text ("&Interrupt Build")
			repository_menu_refresh.set_text ("Refresh Repository")
			repository_menu_set_repository.set_text ("&Configure Repository Profiles...")
			rm_schemas_menu.set_text ("RM &Schemas")
			rm_schemas_menu_reload_schemas.set_text ("&Reload Schemas")
			rm_schemas_menu_configure_rm_schemas.set_text ("&Configure Schemas...")
			xml_menu.set_text ("&XML")
			xml_menu_conv_rules.set_text ("Edit &Conversion Rules...")
			tools_menu.set_text ("&Tools")
			tools_menu_clean_generated_files.set_text ("&Clean Generated Files")
			tools_menu_options.set_text ("&Options...")
			help_menu.set_text ("&Help")
			help_menu_contents.set_text ("&Contents")
			help_menu_release_notes.set_text ("&Release Notes")
			help_menu_icons.set_text ("&Icons ")
			help_menu_clinical_knowledge_manager.set_text ("Clinical &Knowledge Manager")
			help_menu_report_bug.set_text ("Report a &Bug")
			help_menu_about.set_text ("&About ADL Workbench")
			set_minimum_width (500)
			set_minimum_height (350)
			set_maximum_width (2000)
			set_maximum_height (2000)
			set_title ("Archetype Definition Language VER Workbench")

			set_all_attributes_using_constants
			
				-- Connect events.
			file_menu_open.select_actions.extend (agent open_archetype)
			file_menu_parse.select_actions.extend (agent parse_archetype)
			file_menu_edit.select_actions.extend (agent edit_archetype)
			file_menu_save_as.select_actions.extend (agent save_archetype_as)
			file_menu_exit.select_actions.extend (agent exit_app)
			edit_menu_clipboard.select_actions.extend (agent show_clipboard)
			view_menu_reset_layout.select_actions.extend (agent on_reset_tool_layout)
			history_menu.select_actions.extend (agent on_history)
			history_menu_back.select_actions.extend (agent on_back)
			history_menu_forward.select_actions.extend (agent on_forward)
			repository_menu_build_all.select_actions.extend (agent build_all)
			repository_menu_rebuild_all.select_actions.extend (agent rebuild_all)
			repository_menu_build_subtree.select_actions.extend (agent build_subtree)
			repository_menu_rebuild_subtree.select_actions.extend (agent rebuild_subtree)
			repository_menu_export_html.select_actions.extend (agent export_html)
			repository_menu_export_repository_report.select_actions.extend (agent export_repository_report)
			repository_menu_interrupt_build.select_actions.extend (agent interrupt_build)
			repository_menu_refresh.select_actions.extend (agent refresh_directory)
			repository_menu_set_repository.select_actions.extend (agent set_repository)
			rm_schemas_menu_reload_schemas.select_actions.extend (agent reload_schemas)
			rm_schemas_menu_configure_rm_schemas.select_actions.extend (agent set_rm_schemas)
			xml_menu_conv_rules.select_actions.extend (agent set_xml_rules)
			tools_menu_clean_generated_files.select_actions.extend (agent clean_generated_files)
			tools_menu_options.select_actions.extend (agent set_options)
			help_menu_contents.select_actions.extend (agent show_online_help)
			help_menu_release_notes.select_actions.extend (agent show_release_notes)
			help_menu_icons.select_actions.extend (agent show_icon_help)
			help_menu_clinical_knowledge_manager.select_actions.extend (agent show_clinical_knowledge_manager)
			help_menu_report_bug.select_actions.extend (agent show_bug_reporter)
			help_menu_about.select_actions.extend (agent show_about)
			close_request_actions.extend (agent exit_app)

				-- Call `user_initialization'.
			user_initialization
		end
		
	frozen create_interface_objects
			-- Create objects
		do
			
				-- Create all widgets.
			create menu
			create file_menu
			create file_menu_open
			create file_menu_parse
			create file_menu_edit
			create l_ev_menu_separator_1
			create file_menu_save_as
			create l_ev_menu_separator_2
			create file_menu_exit
			create edit_menu
			create edit_menu_copy
			create edit_menu_select_all
			create l_ev_menu_separator_3
			create edit_menu_clipboard
			create view_menu
			create view_menu_differential
			create view_menu_flat
			create view_menu_new_tab
			create l_ev_menu_separator_4
			create view_menu_reset_layout
			create history_menu
			create history_menu_back
			create history_menu_forward
			create history_menu_separator
			create repository_menu
			create repository_menu_build_all
			create repository_menu_rebuild_all
			create l_ev_menu_separator_5
			create repository_menu_build_subtree
			create repository_menu_rebuild_subtree
			create l_ev_menu_separator_6
			create repository_menu_export_html
			create repository_menu_export_repository_report
			create l_ev_menu_separator_7
			create repository_menu_interrupt_build
			create repository_menu_refresh
			create l_ev_menu_separator_8
			create repository_menu_set_repository
			create rm_schemas_menu
			create rm_schemas_menu_reload_schemas
			create l_ev_menu_separator_9
			create rm_schemas_menu_configure_rm_schemas
			create xml_menu
			create l_ev_menu_separator_10
			create xml_menu_conv_rules
			create tools_menu
			create tools_menu_clean_generated_files
			create l_ev_menu_separator_11
			create tools_menu_options
			create help_menu
			create help_menu_contents
			create help_menu_release_notes
			create help_menu_icons
			create l_ev_menu_separator_12
			create help_menu_clinical_knowledge_manager
			create help_menu_report_bug
			create help_menu_about
			create ev_main_vbox

			create string_constant_set_procedures.make (10)
			create string_constant_retrieval_functions.make (10)
			create integer_constant_set_procedures.make (10)
			create integer_constant_retrieval_functions.make (10)
			create pixmap_constant_set_procedures.make (10)
			create pixmap_constant_retrieval_functions.make (10)
			create integer_interval_constant_retrieval_functions.make (10)
			create integer_interval_constant_set_procedures.make (10)
			create font_constant_set_procedures.make (10)
			create font_constant_retrieval_functions.make (10)
			create pixmap_constant_retrieval_functions.make (10)
			create color_constant_set_procedures.make (10)
			create color_constant_retrieval_functions.make (10)
			user_create_interface_objects
		end


feature -- Access

	menu: EV_MENU_BAR
	file_menu, edit_menu, view_menu, history_menu, repository_menu, rm_schemas_menu,
	xml_menu, tools_menu, help_menu: EV_MENU
	file_menu_open, file_menu_parse, file_menu_edit,
	file_menu_save_as, file_menu_exit, edit_menu_copy, edit_menu_select_all, edit_menu_clipboard,
	view_menu_differential, view_menu_flat, view_menu_new_tab, view_menu_reset_layout,
	history_menu_back, history_menu_forward, repository_menu_build_all, repository_menu_rebuild_all,
	repository_menu_build_subtree, repository_menu_rebuild_subtree, repository_menu_export_html,
	repository_menu_export_repository_report, repository_menu_interrupt_build, repository_menu_refresh,
	repository_menu_set_repository, rm_schemas_menu_reload_schemas, rm_schemas_menu_configure_rm_schemas,
	xml_menu_conv_rules, tools_menu_clean_generated_files, tools_menu_options, help_menu_contents,
	help_menu_release_notes, help_menu_icons, help_menu_clinical_knowledge_manager, help_menu_report_bug,
	help_menu_about: EV_MENU_ITEM
	l_ev_menu_separator_1, l_ev_menu_separator_2, l_ev_menu_separator_3,
	l_ev_menu_separator_4, history_menu_separator, l_ev_menu_separator_5, l_ev_menu_separator_6,
	l_ev_menu_separator_7, l_ev_menu_separator_8, l_ev_menu_separator_9, l_ev_menu_separator_10,
	l_ev_menu_separator_11, l_ev_menu_separator_12: EV_MENU_SEPARATOR
	ev_main_vbox: EV_VERTICAL_BOX

feature {NONE} -- Implementation

	is_in_default_state: BOOLEAN
			-- Is `Current' in its default state?
		do
			Result := True
		end

	user_create_interface_objects
			-- Feature for custom user interface object creation, called at end of `create_interface_objects'.
		deferred
		end

	user_initialization
			-- Feature for custom initialization, called at end of `initialize'.
		deferred
		end
	
	open_archetype
			-- Called by `select_actions' of `file_menu_open'.
		deferred
		end
	
	parse_archetype
			-- Called by `select_actions' of `file_menu_parse'.
		deferred
		end
	
	edit_archetype
			-- Called by `select_actions' of `file_menu_edit'.
		deferred
		end
	
	save_archetype_as
			-- Called by `select_actions' of `file_menu_save_as'.
		deferred
		end
	
	exit_app
			-- Called by `select_actions' of `file_menu_exit'.
		deferred
		end
	
	show_clipboard
			-- Called by `select_actions' of `edit_menu_clipboard'.
		deferred
		end
	
	on_reset_tool_layout
			-- Called by `select_actions' of `view_menu_reset_layout'.
		deferred
		end
	
	on_history
			-- Called by `select_actions' of `history_menu'.
		deferred
		end
	
	on_back
			-- Called by `select_actions' of `history_menu_back'.
		deferred
		end
	
	on_forward
			-- Called by `select_actions' of `history_menu_forward'.
		deferred
		end
	
	build_all
			-- Called by `select_actions' of `repository_menu_build_all'.
		deferred
		end
	
	rebuild_all
			-- Called by `select_actions' of `repository_menu_rebuild_all'.
		deferred
		end
	
	build_subtree
			-- Called by `select_actions' of `repository_menu_build_subtree'.
		deferred
		end
	
	rebuild_subtree
			-- Called by `select_actions' of `repository_menu_rebuild_subtree'.
		deferred
		end
	
	export_html
			-- Called by `select_actions' of `repository_menu_export_html'.
		deferred
		end
	
	export_repository_report
			-- Called by `select_actions' of `repository_menu_export_repository_report'.
		deferred
		end
	
	interrupt_build
			-- Called by `select_actions' of `repository_menu_interrupt_build'.
		deferred
		end
	
	refresh_directory
			-- Called by `select_actions' of `repository_menu_refresh'.
		deferred
		end
	
	set_repository
			-- Called by `select_actions' of `repository_menu_set_repository'.
		deferred
		end
	
	reload_schemas
			-- Called by `select_actions' of `rm_schemas_menu_reload_schemas'.
		deferred
		end
	
	set_rm_schemas
			-- Called by `select_actions' of `rm_schemas_menu_configure_rm_schemas'.
		deferred
		end
	
	set_xml_rules
			-- Called by `select_actions' of `xml_menu_conv_rules'.
		deferred
		end
	
	clean_generated_files
			-- Called by `select_actions' of `tools_menu_clean_generated_files'.
		deferred
		end
	
	set_options
			-- Called by `select_actions' of `tools_menu_options'.
		deferred
		end
	
	show_online_help
			-- Called by `select_actions' of `help_menu_contents'.
		deferred
		end
	
	show_release_notes
			-- Called by `select_actions' of `help_menu_release_notes'.
		deferred
		end
	
	show_icon_help
			-- Called by `select_actions' of `help_menu_icons'.
		deferred
		end
	
	show_clinical_knowledge_manager
			-- Called by `select_actions' of `help_menu_clinical_knowledge_manager'.
		deferred
		end
	
	show_bug_reporter
			-- Called by `select_actions' of `help_menu_report_bug'.
		deferred
		end
	
	show_about
			-- Called by `select_actions' of `help_menu_about'.
		deferred
		end
	

feature {NONE} -- Constant setting

	frozen set_attributes_using_string_constants
			-- Set all attributes relying on string constants to the current
			-- value of the associated constant.
		local
			s: detachable STRING_32
		do
			from
				string_constant_set_procedures.start
			until
				string_constant_set_procedures.off
			loop
				string_constant_retrieval_functions.i_th (string_constant_set_procedures.index).call (Void)
				s := string_constant_retrieval_functions.i_th (string_constant_set_procedures.index).last_result
				if s /= Void then
					string_constant_set_procedures.item.call ([s])
				end
				string_constant_set_procedures.forth
			end
		end

	frozen set_attributes_using_integer_constants
			-- Set all attributes relying on integer constants to the current
			-- value of the associated constant.
		local
			i: INTEGER
			arg1, arg2: INTEGER
			int: INTEGER_INTERVAL
		do
			from
				integer_constant_set_procedures.start
			until
				integer_constant_set_procedures.off
			loop
				integer_constant_retrieval_functions.i_th (integer_constant_set_procedures.index).call (Void)
				i := integer_constant_retrieval_functions.i_th (integer_constant_set_procedures.index).last_result
				integer_constant_set_procedures.item.call ([i])
				integer_constant_set_procedures.forth
			end
			from
				integer_interval_constant_retrieval_functions.start
				integer_interval_constant_set_procedures.start
			until
				integer_interval_constant_retrieval_functions.off
			loop
				integer_interval_constant_retrieval_functions.item.call (Void)
				arg1 := integer_interval_constant_retrieval_functions.item.last_result
				integer_interval_constant_retrieval_functions.forth
				integer_interval_constant_retrieval_functions.item.call (Void)
				arg2 := integer_interval_constant_retrieval_functions.item.last_result
				create int.make (arg1, arg2)
				integer_interval_constant_set_procedures.item.call ([int])
				integer_interval_constant_retrieval_functions.forth
				integer_interval_constant_set_procedures.forth
			end
		end

	frozen set_attributes_using_pixmap_constants
			-- Set all attributes relying on pixmap constants to the current
			-- value of the associated constant.
		local
			p: detachable EV_PIXMAP
		do
			from
				pixmap_constant_set_procedures.start
			until
				pixmap_constant_set_procedures.off
			loop
				pixmap_constant_retrieval_functions.i_th (pixmap_constant_set_procedures.index).call (Void)
				p := pixmap_constant_retrieval_functions.i_th (pixmap_constant_set_procedures.index).last_result
				if p /= Void then
					pixmap_constant_set_procedures.item.call ([p])
				end
				pixmap_constant_set_procedures.forth
			end
		end

	frozen set_attributes_using_font_constants
			-- Set all attributes relying on font constants to the current
			-- value of the associated constant.
		local
			f: detachable EV_FONT
		do
			from
				font_constant_set_procedures.start
			until
				font_constant_set_procedures.off
			loop
				font_constant_retrieval_functions.i_th (font_constant_set_procedures.index).call (Void)
				f := font_constant_retrieval_functions.i_th (font_constant_set_procedures.index).last_result
				if f /= Void then
					font_constant_set_procedures.item.call ([f])
				end
				font_constant_set_procedures.forth
			end	
		end

	frozen set_attributes_using_color_constants
			-- Set all attributes relying on color constants to the current
			-- value of the associated constant.
		local
			c: detachable EV_COLOR
		do
			from
				color_constant_set_procedures.start
			until
				color_constant_set_procedures.off
			loop
				color_constant_retrieval_functions.i_th (color_constant_set_procedures.index).call (Void)
				c := color_constant_retrieval_functions.i_th (color_constant_set_procedures.index).last_result
				if c /= Void then
					color_constant_set_procedures.item.call ([c])
				end
				color_constant_set_procedures.forth
			end
		end

	frozen set_all_attributes_using_constants
			-- Set all attributes relying on constants to the current
			-- calue of the associated constant.
		do
			set_attributes_using_string_constants
			set_attributes_using_integer_constants
			set_attributes_using_pixmap_constants
			set_attributes_using_font_constants
			set_attributes_using_color_constants
		end
	
	string_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [READABLE_STRING_GENERAL]]]
	string_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], STRING_32]]
	integer_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [INTEGER]]]
	integer_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], INTEGER]]
	pixmap_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [EV_PIXMAP]]]
	pixmap_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], EV_PIXMAP]]
	integer_interval_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], INTEGER]]
	integer_interval_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [INTEGER_INTERVAL]]]
	font_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [EV_FONT]]]
	font_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], EV_FONT]]
	color_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [EV_COLOR]]]
	color_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], EV_COLOR]]

	frozen integer_from_integer (an_integer: INTEGER): INTEGER
			-- Return `an_integer', used for creation of
			-- an agent that returns a fixed integer value.
		do
			Result := an_integer
		end

end
