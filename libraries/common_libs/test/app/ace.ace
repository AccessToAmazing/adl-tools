system
	"common_libs_test"

root
	APPLICATION: make

default
	document (".")
	precompiled ("$ISE_EIFFEL\precomp\spec\$ISE_PLATFORM\base")
	assertion (require)
	arguments ("C:\project\openehr\ref_impl_eiffel\libraries\common_libs\conf\unit_parser")
	disabled_debug (yes)
	disabled_debug ("adl_parse")
	disabled_debug ("adl_tree")
	debug ("dadl_parse")
	disabled_debug ("gelex")
	disabled_debug ("geyacc")
	disabled_debug ("og_path_parse")
	disabled_debug ("units")
	debug (no)
	line_generation (yes)
	profile (no)
	trace (no)
	check_vape (no)
	console_application (yes)
	syntax_warning (no)
	address_expression (no)
	array_optimization (no)
	dead_code_removal (no)
	dynamic_runtime (no)
	exception_trace (no)
	inlining (no)
	multithreaded (no)


cluster
	all app:		"$OPENEHR\ref_impl_eiffel\libraries\common_libs\test"
		exclude
			".svn"; 
		default
			assertion (invariant)
		end

	all openehr:		"$OPENEHR\ref_impl_eiffel\libraries\openehr\src"
		exclude
			".svn"; 
		default
			assertion (invariant)

	all common_libs:		"$OPENEHR\ref_impl_eiffel\libraries\common_libs\src"
		exclude
			".svn"; 
		default
			assertion (invariant)
		end

	all openehr_data_types (openehr):		"$\rm\data_types"
		exclude
			".svn"; 
		default
			assertion (invariant)
		end

	all openehr_support (openehr):		"$\rm\support"
		exclude
			".svn"; 
		default
			assertion (invariant)
		end

	library ut_support:		"$GOBO\library\utility"

	library kl_kernel:		"$GOBO\library\kernel"
		exclude
			spec; 
		end

	library kl_kernel_spec:		"$GOBO\library\kernel\spec\ise"

	library kl_lexical:		"$GOBO\library\lexical"

	library kl_parse:		"$GOBO\library\parse"

	library gobo_structure:		"$GOBO\library\structure"

	library regexp:		"$GOBO\library\regexp"

	library design_pattern:		"$GOBO\library\pattern"

	library base:		"$ISE_EIFFEL\library\base"
		exclude
			"table_eiffel3"; "desc"; 
		end

	time:		"$ISE_EIFFEL\library\time"

	time_format (time):		"$\format"

	library time_format_english (time_format):		"$\en-int"

external

	include_path:
		"$(GOBO)\library\kernel\include"

	object:
		"$(OPENEHR)\build_area_eiffel\common_libs\bin\spec\$(ISE_C_COMPILER)\lib\method_dispatcher.lib"

end
